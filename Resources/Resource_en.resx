<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="файоToolStripMenuItem" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="создатьToolStripMenuItem" xml:space="preserve">
    <value>Create file</value>
  </data>
  <data name="открытьToolStripMenuItem" xml:space="preserve">
    <value>Open file</value>
  </data>
  <data name="сохранитьToolStripMenuItem" xml:space="preserve">
    <value>Save file</value>
  </data>
  <data name="сохранитьКакToolStripMenuItem" xml:space="preserve">
    <value>Save as</value>
  </data>
  <data name="выходToolStripMenuItem" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="правкаToolStripMenuItem" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="отменитьToolStripMenuItem" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="повторитьToolStripMenuItem" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="вырезатьToolStripMenuItem" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="копироватьToolStripMenuItem" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="вставитьToolStripMenuItem" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="удалитьToolStripMenuItem" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="выделитьВсёToolStripMenuItem" xml:space="preserve">
    <value>Select all</value>
  </data>
  <data name="текстToolStripMenuItem" xml:space="preserve">
    <value>Text</value>
  </data>
  <data name="постановкаЗадачиToolStripMenuItem" xml:space="preserve">
    <value>Task Definition</value>
  </data>
  <data name="грамматикаToolStripMenuItem" xml:space="preserve">
    <value>Grammar</value>
  </data>
  <data name="классификацияГрамматикиToolStripMenuItem" xml:space="preserve">
    <value>Grammar Classification</value>
  </data>
  <data name="методАнализаToolStripMenuItem" xml:space="preserve">
    <value>Analysis Method</value>
  </data>
  <data name="диагностикаИНейтрализацияОшибокToolStripMenuItem" xml:space="preserve">
    <value>Error Diagnostics and Neutralization</value>
  </data>
  <data name="тестовыйПримерToolStripMenuItem" xml:space="preserve">
    <value>Test Example</value>
  </data>
  <data name="списокЛитературыToolStripMenuItem" xml:space="preserve">
    <value>References</value>
  </data>
  <data name="исходныйКодПрограммыToolStripMenuItem" xml:space="preserve">
    <value>Source Code</value>
  </data>
  <data name="пускToolStripMenuItem" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="справкToolStripMenuItem" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="вызовСправкиToolStripMenuItem" xml:space="preserve">
    <value>Show Help</value>
  </data>
  <data name="оПрограммеToolStripMenuItem" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="размерШрифтаВОкнеВыводавводаToolStripMenuItem" xml:space="preserve">
    <value>Text size</value>
  </data>
  <data name="языкПрограммыToolStripMenuItem" xml:space="preserve">
    <value>Program Language</value>
  </data>
  <data name="русскийToolStripMenuItem" xml:space="preserve">
    <value>Russian</value>
  </data>
  <data name="английскийToolStripMenuItem" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="FileSaved" xml:space="preserve">
    <value>File saved successfully.</value>
  </data>
  <data name="FileOpened" xml:space="preserve">
    <value>File opened successfully.</value>
  </data>
  <data name="ToolTip_CreateFileButton" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="ToolTip_OpenFileButton" xml:space="preserve">
    <value>Open</value>
  </data>
  <data name="ToolTip_SaveFileButton" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ToolTip_ReturnButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="ToolTip_RepeatButton" xml:space="preserve">
    <value>Repeat</value>
  </data>
  <data name="ToolTip_CopyButton" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="ToolTip_CutButton" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="ToolTip_PasteButton" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="ToolTip_RunButton" xml:space="preserve">
    <value>Start</value>
  </data>
  <data name="ToolTip_AboutButton" xml:space="preserve">
    <value>Show help</value>
  </data>
  <data name="ToolTip_InfoButton" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="FileCreated" xml:space="preserve">
    <value>File created successfully.</value>
  </data>
  <data name="TabLabel" xml:space="preserve">
    <value>Current Page:</value>
  </data>
  <data name="FileNameColumn" xml:space="preserve">
    <value>Lexem code</value>
  </data>
  <data name="LineColumn" xml:space="preserve">
    <value>Lexem type</value>
  </data>
  <data name="Mess" xml:space="preserve">
    <value>Message</value>
  </data>
  <data name="MessageColumn" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="CloseUnsavedStr" xml:space="preserve">
    <value>There are unsaved tabs. Are you sure you want to close the program?</value>
  </data>
  <data name="CloseSavedStr" xml:space="preserve">
    <value>Are you sure you want to close the program?</value>
  </data>
  <data name="SaveNoPathStr" xml:space="preserve">
    <value>No editable file selected. Do you want to create a file?</value>
  </data>
  <data name="CloseProgramStr" xml:space="preserve">
    <value>Closing program</value>
  </data>
  <data name="MessageNoPathStr" xml:space="preserve">
    <value>Editable file missing</value>
  </data>
  <data name="закрытьВкладкуToolStripMenuItem" xml:space="preserve">
    <value>Close current tab</value>
  </data>
  <data name="Identificator" xml:space="preserve">
    <value>Identificator</value>
  </data>
  <data name="KeyWord" xml:space="preserve">
    <value>Key Word</value>
  </data>
  <data name="Partial" xml:space="preserve">
    <value>Partial Symbol</value>
  </data>
  <data name="AssignmentOperator" xml:space="preserve">
    <value>Assignment Operator</value>
  </data>
  <data name="String" xml:space="preserve">
    <value>String</value>
  </data>
  <data name="F_stringAssign" xml:space="preserve">
    <value>F-string Assign</value>
  </data>
  <data name="Minus" xml:space="preserve">
    <value>Minus</value>
  </data>
  <data name="Plus" xml:space="preserve">
    <value>Plus</value>
  </data>
  <data name="FunctionalPartial" xml:space="preserve">
    <value>Functional Partial</value>
  </data>
  <data name="MinusComlexInt" xml:space="preserve">
    <value>Scientific notation of integer (negative)</value>
  </data>
  <data name="PlusComplexInt" xml:space="preserve">
    <value>Scientific notation of integer (positive)</value>
  </data>
  <data name="Int" xml:space="preserve">
    <value>Integer</value>
  </data>
  <data name="Double" xml:space="preserve">
    <value>Real number</value>
  </data>
  <data name="MinusComplexDouble" xml:space="preserve">
    <value>Scientific notation of real number (negative)</value>
  </data>
  <data name="PlusComplexDouble" xml:space="preserve">
    <value>Scientific notation of real number (positive)</value>
  </data>
  <data name="OpenScobe" xml:space="preserve">
    <value>Opening parenthesis</value>
  </data>
  <data name="CloseScobe" xml:space="preserve">
    <value>Closing parenthesis</value>
  </data>
  <data name="Ending" xml:space="preserve">
    <value>Terminal symbol</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>ERROR: UNKNOWN/WRONG SYMBOL</value>
  </data>
</root>